/*
 * TSFunc1DGaussAsymPdf.cc
 *
 *  Created on: Aug 4, 2014
 *      Author: Silvestro di Luise
 *			    Silvestro.Di.Luise@cern.ch
 *
 */

#include <cassert>

#include <TMath.h>


#include "TSFunc1DGaussAsymPdf.h"

TSFunc1DGaussAsymPdf::TSFunc1DGaussAsymPdf() {


}

TSFunc1DGaussAsymPdf::TSFunc1DGaussAsymPdf(TString name, TString title
					,const TSVariable &var_x
					,const TSParameter &mean, const TSParameter &sigma, const TSParameter &delta)
:TSFunc1DGaussPdf(name,title,var_x,mean,sigma)
{

	Init();

	fX=&var_x;
	fMean = &mean;
	fSigma = &sigma;
	fDelta = &delta;


}

TSFunc1DGaussAsymPdf::~TSFunc1DGaussAsymPdf() {


}


void TSFunc1DGaussAsymPdf::Init(){

	fNDim = 1;
	fNPar = 3;
	fX=0 ;
	fMean=0;
	fSigma=0;
	fDelta=0;

}



double TSFunc1DGaussAsymPdf::Eval() const{

    assert(fX);
    assert(fMean);
    assert(fSigma);
    assert(fDelta);

	double m=fMean->GetValue();
	double s=fSigma->GetValue();
    double d=fDelta->GetValue();

	double xx=fX->GetValue();

	//
	//return normalized 1D Asymmetric Gaussian
	//

	double sd=0;

	if( xx < m ){
		sd= s*(1-d);
	}else{
		sd=s*(1+d);
	}

	double v= TMath::Gaus(xx,m,sd,1);

	return v;
}
